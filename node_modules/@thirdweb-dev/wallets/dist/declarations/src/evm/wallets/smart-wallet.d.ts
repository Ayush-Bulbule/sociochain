import { AbstractClientWallet, WalletOptions } from "./base";
import type { ConnectParams } from "../interfaces/connector";
import type { SmartWalletConfig, SmartWalletConnectionArgs } from "../connectors/smart-wallet/types";
import type { SmartWalletConnector as SmartWalletConnectorType } from "../connectors/smart-wallet";
import { Transaction, TransactionResult } from "@thirdweb-dev/sdk";
export * from "../connectors/smart-wallet/types";
export * from "../connectors/smart-wallet/utils";
export declare class SmartWallet extends AbstractClientWallet<SmartWalletConfig, SmartWalletConnectionArgs> {
    connector?: SmartWalletConnectorType;
    static meta: {
        name: string;
        iconURL: string;
    };
    static id: string;
    get walletName(): "Smart Wallet";
    constructor(options: WalletOptions<SmartWalletConfig>);
    getConnector(): Promise<SmartWalletConnectorType>;
    getPersonalWallet(): import("..").EVMWallet | undefined;
    execute(transaction: Transaction): Promise<TransactionResult>;
    executeBatch(transactions: Transaction[]): Promise<TransactionResult>;
    autoConnect(params: ConnectParams<SmartWalletConnectionArgs>): Promise<string>;
}
//# sourceMappingURL=smart-wallet.d.ts.map