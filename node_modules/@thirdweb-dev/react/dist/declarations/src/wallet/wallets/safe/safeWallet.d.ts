/// <reference types="react" />
import { SafeWallet } from "@thirdweb-dev/wallets";
import { ConfiguredWallet, ConnectUIProps, WalletOptions } from "@thirdweb-dev/react-core";
import { SafeWalletConfig } from "./types";
export declare const safeWallet: (config?: SafeWalletConfig) => {
    id: string;
    meta: {
        name: string;
        iconURL: string;
    };
    create: (options: WalletOptions) => SafeWallet;
    config: {
        personalWallets: {
            id: string;
            meta: import("@thirdweb-dev/wallets/dist/declarations/src/evm/wallets/base").WalletMeta;
            create: (options: WalletOptions) => import("@thirdweb-dev/wallets").AbstractClientWallet<Record<string, any>, Record<string, any>>;
            connectUI?: import("react").FC<ConnectUIProps> | undefined;
            isInstalled?: (() => boolean) | undefined;
        }[];
    };
    connectUI(props: ConnectUIProps): JSX.Element;
    isInstalled(): false;
};
type SafeConnectUIProps = ConnectUIProps & {
    configuredWallet: ConfiguredWallet<SafeWallet, Required<SafeWalletConfig>>;
};
export declare const SafeConnectUI: (props: SafeConnectUIProps) => JSX.Element;
export {};
//# sourceMappingURL=safeWallet.d.ts.map